/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { OrbitControls, PerspectiveCamera, useGLTF, useTexture } from '@react-three/drei'
import { useLoader } from '@react-three/fiber'
import { TextureLoader } from 'three'
 
export function Face(props) {
  const { nodes, materials } = useGLTF('/models/Face.gltf')
  const diffuseMap = useLoader(TextureLoader, '/textures/Face.png')
  diffuseMap.flipY = false

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ZBrush_defualt_group.geometry}
        
      >
        <OrbitControls/>
       <PerspectiveCamera/>
        <meshBasicMaterial map={diffuseMap}/>
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/Face.gltf')
